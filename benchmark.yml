---
- name: install Red Hat CA certificate
  hosts: hosts
  remote_user: root
  tasks:
   - name: install Red Hat CA certificate
     dnf:
       state: present
       name: 'http://hdn.corp.redhat.com/rhel7-csb-stage/RPMS/noarch/redhat-internal-cert-install-0.1-23.el7.csb.noarch.rpm'
       disable_gpg_check: yes

- name: set up build servers
  hosts: hosts
  remote_user: root
  tasks:
   - name: install git and QEMU dependencies
     dnf:
         state: present
         name: [
             'binutils',
             'bluez-libs-devel',
             'brlapi-devel',
             'check-devel',
             'cpp',
             'cyrus-sasl-devel',
             'gcc',
             'git',
             'glusterfs-api-devel',
             'glusterfs-devel',
             'gnutls-devel',
             'gperftools-devel',
             'iasl',
             'kernel-devel',
             'libaio-devel',
             'libattr-devel',
             'libcacard-devel',
             'libcap-devel',
             'libcurl-devel',
             'libepoxy-devel',
             'libgcrypt-devel',
             'libiscsi-devel',
             'libjpeg-devel',
             'libpng-devel',
             'librados2-devel',
             'librbd1-devel',
             'librdmacm-devel',
             'libseccomp-devel',
             'libssh2-devel',
             'libtool',
             'libusbx-devel',
             'libuuid-devel',
             'lzo-devel',
             'make',
             'mesa-libgbm-devel',
             'ncurses-devel',
             'nss-devel',
             'numactl-devel',
             'pciutils-devel',
             'perl-podlators',
             'pixman-devel',
             'pulseaudio-libs-devel',
             'python',
             'rsync',
             'SDL-devel',
             'spice-protocol',
             'spice-server-devel',
             'systemtap',
             'systemtap-sdt-devel',
             'texi2html',
             'texinfo',
             'usbredir-devel',
             'which',
             'zlib-devel'
         ]

- name: set up vm
  hosts: hosts
  remote_user: root
  tasks:
   - name: install virt-builder
     dnf:
        state: present
        name: ['libguestfs-tools', 'libvirt-daemon', 'libvirt-client']

   - name: configure libvirt QEMU settings
     copy: src=files/qemu.conf-no-vfio dest=/etc/libvirt/qemu.conf mode=644

   - name: start libvirtd service
     service: name=libvirtd state=reloaded

   - name: create vm image
     shell: virt-builder fedora-32 --quiet --size 16G --output /var/lib/libvirt/images/test.img --format raw --mkdir '/root/.ssh' --chmod '0700:/root/.ssh' --upload '/root/.ssh/authorized_keys:/root/.ssh/authorized_keys' --chmod '0600:/root/.ssh/authorized_keys' --root-password password:linux99 --selinux-relabel creates=/var/lib/libvirt/images/test.img

- name: build QEMU
  hosts: hosts
  remote_user: root
  tasks:
   - name: remove pull request tags to prevent fetch --tags failures
     shell: '! test -d /root/qemu || (cd /root/qemu && git tag -d $(git tag -l "*-pull-request"))'

   - name: set up QEMU git repo
     git:
       repo=https://code.engineering.redhat.com/gerrit/virt-rhel8-qemu-kvm
       version=rhel-av-8.3.1
       dest=/root/qemu
       force=yes

   - name: ignore submodules in git-status(1)
     git_config: name=diff.ignoreSubmodules value=all scope=local repo=/root/qemu

   - name: allow path traversal into /root
     file:
       path: /root
       mode: '551'

   - name: install SELinux Python modules
     dnf:
       state: present
       name: ['python3-libselinux']

   - name: set SELinux to permissive mode to avoid having to set contexts on all files
     selinux:
       policy: targeted
       state: permissive

   - name: build QEMU
     shell: ./configure --target-list=x86_64-softmmu --disable-auth-pam --disable-avx512f --disable-bochs --disable-brlapi --disable-bsd-user --disable-bzip2 --disable-cap-ng --enable-capstone --disable-cloop --disable-cocoa --enable-coroutine-pool --disable-crypto-afalg --enable-curl --disable-curses --enable-debug-info --disable-debug-mutex --disable-debug-tcg --disable-dmg --disable-docs --disable-fdt --enable-gcrypt --disable-git-update --disable-glusterfs --enable-gnutls --disable-gtk --disable-guest-agent --disable-guest-agent-msi --disable-hax --disable-hvf --enable-iconv --disable-jemalloc --enable-kvm --disable-libdaxctl --enable-libiscsi --disable-libnfs --disable-libpmem --disable-libssh --disable-libusb --disable-libxml2 --enable-linux-aio --disable-linux-io-uring --disable-linux-user --disable-live-block-migration --disable-lzfse --enable-lzo --enable-malloc-trim --disable-membarrier --enable-modules --disable-module-upgrades --disable-mpath --disable-netmap --disable-nettle --enable-numa --enable-opengl --disable-parallels --enable-pie --disable-pvrdma --disable-qcow1 --disable-qed --disable-qom-cast-debug --enable-rbd --disable-rdma --disable-rng-none --disable-replication --disable-safe-stack --disable-sanitizers --disable-sdl --disable-sdl-image --enable-seccomp --disable-sheepdog --disable-snappy --disable-sparse --disable-smartcard --enable-spice --disable-strip --enable-system --enable-tcg --disable-tcmalloc --enable-tools --enable-tpm --enable-trace-backend=dtrace --disable-usb-redir --disable-user --disable-vde --disable-vdi --disable-vhost-crypto --enable-vhost-kernel --enable-vhost-net --disable-vhost-scsi --enable-vhost-user --enable-vhost-vdpa --enable-vhost-vsock --disable-virglrenderer --disable-virtfs --enable-vnc --disable-vnc-jpeg --enable-vnc-png --enable-vnc-sasl --disable-vte --disable-vvfat --enable-werror --disable-whpx --disable-xen --disable-xen-pci-passthrough --disable-xfsctl --disable-xkbcommon --disable-zstd --without-default-devices && make -j$(nproc) chdir=/root/qemu

#- name: put NVMe flash translation later into well-known state
#  hosts : hosts
#  remote_user: root
#  tasks:
#   - name: discard NVMe drive
#     shell: blkdiscard /dev/nvme0n1p1
#   - name: write NVMe drive (first pass)
#     shell: dd if=/dev/urandom of=/dev/nvme0n1p1 oflag=direct bs=2M count=178853
#   - name: write NVMe drive (second pass)
#     shell: dd if=/dev/urandom of=/dev/nvme0n1p1 oflag=direct bs=2M count=178853

#- name: make NVMe drive world writeable
#  hosts: hosts
#  remote_user: root
#  tasks:
#    - name: set permissions on /dev/nvme0n1
#      file:
#        path: /dev/nvme0n1
#        mode: '0666'
#
#- name: set up vfio-pci
#  hosts: hosts
#  remote_user: root
#  tasks:
#    - name: bind the nvme drive to vfio-pci
#      command: driverctl --nosave set-override 0000:5e:00.0 vfio-pci
#      ignore_errors: yes

- name: start VM
  hosts: hosts
  remote_user: root
  tasks:
   - name: install python3-libvirt
     dnf:
        state: present
        name: 'python3-libvirt'

   - name: define VM
     virt:
       command: define
       xml: "{{ lookup('file', 'files/test.xml') }}"

   - name: start VM
     virt:
       name: test
       state: running

   - name: wait for SSH
     wait_for: host=192.168.122.192 port=22 search_regex=SSH state=present timeout=120

- name: set up fio
  hosts: vms
  remote_user: root
  tasks:
   - name: install fio
     dnf: name=fio state=present

- name: run benchmark
  hosts: vms
  remote_user: root
  tasks:
   - include_tasks: run_fio.yml

- name: stop VM
  hosts: vms
  remote_user: root
  tasks:
   - name: stop QEMU
     command: /sbin/shutdown -t now

#- name: clean up vfio-pci
#  hosts: hosts
#  remote_user: root
#  tasks:
#    - name: unbind the nvme drive to vfio-pci
#      command: driverctl --nosave unset-override 0000:5e:00.0
